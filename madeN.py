'''
N으로 표현하기 https://programmers.co.kr/learn/courses/30/lessons/42895

아래와 같이 5와 사칙연산만으로 12를 표현할 수 있습니다.

12 = 5 + 5 + (5 / 5) + (5 / 5)
12 = 55 / 5 + 5 / 5
12 = (55 + 5) / 5

5를 사용한 횟수는 각각 6,5,4 입니다. 그리고 이중 가장 작은 경우는 4입니다.
이처럼 숫자 N과 number가 주어질 때, N과 사칙연산만 사용해서 표현 할 수 있는 방법 중 N 사용횟수의 최솟값을 return 하도록 solution 함수를 작성하세요.

제한사항
N은 1 이상 9 이하입니다.
number는 1 이상 32,000 이하입니다.
수식에는 괄호와 사칙연산만 가능하며 나누기 연산에서 나머지는 무시합니다.
최솟값이 8보다 크면 -1을 return 합니다.

입출력 예
N	number	return
5	12	    4
2	11	    3

결과로 N 사용횟수를 return 해야하므로 N 사용 횟수에 따라 집합을 만들고 만들 수 있는 숫자들을 저장한다.
다음 단계로 넘어가기 전, 집합 속에 number가 있다면 해당 단계를 return 한다.
8 단계까지만 확인하면 되기 때문에, 경우의 수가 엄청 많지는 않다.
예를 들어 N이 두 번 사용된 N = 2 집합은 N = 1 N = 1 의 조합에 의해서 만들 수 있다.
N = 3인 집합은, N = 1 N = 2 조합에 의해서 만들 수 있다.
N=2, N=1 는 앞의 경우와 중복됨을 알 수 있다. 즉 만들고자 하는 사용 횟수 집합 크기의 절반까지 확인한다.

N = 1 : [ 5 ]
N = 2 : [ 10(5+5), 0(5-5), 25(5*5), 1(5//5), 55('5'*2) ]
N = 3 : [ 15(5+10), 50(5*10), 5(5+0), 0(5*0), 5(5-0), 30(5+25), 125(5*25), 6(5+1), 5(5*1)... ]


느낀점
어려워서 구글링했는데도 이해를 못했다. 1만들기처럼 경우의수를 생각하며 문제를 풀어서 해결했다. 
N을 연달아 쓰는 부분을 생각하지못해서 어려웠던거 같다

'''
def solution(N, number):
    # 경우의수 저장 리스트
    dp = [[]]
    for i in range(1, 9):
        
        temp = []
        for j in range(1, i):
            for k in dp[j]:
                for l in dp[i - j]:
                    # 더하는 경우 +
                    temp.append(k + l)
                    
                    # 빼는경우
                    if k - l >= 0:
                        temp.append(k - l)
                    
                    # 곱하는경우
                    temp.append(k * l)
                    
                    # 나누는경우
                    if l != 0 and k != 0:
                        temp.append(k // l)
                        
        # N을 연달아 쓰는경우 ex) N = 5라면 55 , 555                
        temp.append(int(str(N) * i))

        # 경우의수 리스트에 찾는 수가있다면 출력
        if number in temp:
            return i
        
        # 없다면 계속해서 숫자를 늘려나감
        dp.append(list(set(temp)))
    
    # 최솟값이 8이상이라면 -1 출력
    return -1

print(solution(5, 12))